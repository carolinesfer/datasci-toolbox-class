x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[1]]
a <- x[[1]]
class(a)
x <- 1:4
y <- 2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x<6] <- 0
x
tbl <- read.csv("hw1_data.csv")
View(tbl)
View(tbl)
View(tbl)
tbl[1:2, ]
tbl[152:153, ]
tbl[47, $Ozone]
tbl[47, 1]
ozone_missing <- is.na(tbl[ ,1])
sum(ozone_missing)
mean(tbl[!ozone_missing, 1])
ozone30 <- tbl[tbl>30, 1]
ozone30 <- tbl[ , 1] > 30
ozone30 <- tbl$Temp > 90
ozone30 <- tbl[ , 1] > 30
temp90 <- tbl$Temp > 90
combo <- ozone30 AND temp90
combo <- ozone30 and temp90
combo <- ozone30 && temp90
combo <- ozone30 & temp90
subset1 <- tbl[combo, ]
View(subset1)
View(subset1)
tbl_comp <- complete.cases(tbl)
comp <- complete.cases(tbl)
tbl_comp <- tbl[comp][1:6, ]
tbl_comp <- tbl[comp, ][1:6, ]
View(tbl_comp)
View(tbl)
tbl_comp <- tbl[comp, ]
View(tbl_comp)
subset1 <- tbl[combo, ]
tbl[ozon30, ]
tbl[ozone30, ]
ozone30 <- tbl[ , 1] > 30
ozone30
ozone30 <- tbl_comp[ , 1] > 30
onzone30
ozon30
ozone30
temp90 <- tbl_com[ ,4] > 90
temp90 <- tbl_comp[ ,4] > 90
temp90
combo <- ozone30 & temp90
sum(combo)
subset1 <- tbl_comp[combo, ]
mean(subset1$Solar.R)
month6 <- tbl_comp$Month == 6
mean(tbl_comp$Temp[month6])
subset2 <- tbl_comp[month6, ]
View(subset1)
View(subset1)
View(subset2)
View(subset2)
sum(month6)
mean(subset2[ ,4])
month6 <- tbl$Month == 6
subset3 <- tbl[month6, ]
View(tbl)
View(subset3)
mean(subset3$Temp)
month5 <- tbl$Month == 5
subset4 <- tbl[month5, ]
max(subset4$Ozone)
View(subset4)
good5 <- is.na(subset4$Ozone)
max(subset4$Ozone[!good5])
save.image("~/datasciencecoursera/R_Programming_Class/homework1_workspace.RData")
clear
library("swirl")
swirl
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_zqrt <- sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my-div
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls
ls()
list.files()
list.files
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create(getwd()/testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
$file.path
?file.path
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive=TRUE)
?unlink
unlink('testdir2', recursive=TRUE)
setwd(old.dir)
unlink('testdir', recursive=true)
unlink('testdir', recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20
)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
?seq
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
bye()
add2 <- function(x,y) {
x+y ## function will return the value of whatever the last expression was.
}
add2(3,5)
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above(x)
above(x,12)
above <- function(x,n = 10) { ## function automatically defaults to n  10
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
numcols <- ncol(y)
means <- numeric(numcols) ## initialize empty vector to hold the means
for (i in 1:numcols) {
means <- mean(y[i])
}
means ## returns means
}
swirl()
library(swirl)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Caroline")
my_name <- c(my_char, "Caroline")
my_name
paste(my_name, collapse =" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c[3, 5, 7]]
x[c(3, 5, 7)]
x[0]
x[300]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar=2, norf=NA)
vect
names(vect)
vect2(11, 2, NA)
vect2 <- 11, 2, NA
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.fram(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnams <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x<-0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
clear()
swirl()
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num=5)
remainder(4, div=2)
args(remainder)
bye()
